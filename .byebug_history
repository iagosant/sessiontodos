c
exit
user_params
@user.current_step
params
(user_params[:current_step].present?)
 @user.current_step = (user_params[:current_step].present?)? user_params[:current_step] : ""
c
@user.current_step == "security"
@user.current_step
@user
c
exit
@user.avatar
@user.update(avatar: user_params[:avatar])
@user.update(user_params[:avatar])
 @user.update(user_params[:avatar])
user_params[:avatar]
c
exit
exir
exit
updateAvatar
updateAvatar(user_params)
(params[:commit]=="avatar")
params[:commit].present?
exit
params[:commit]
params
user_params
c
user_params
user_params[:commit].present?
@user.current_step == "personal"
exit
user_params
c
exit
user_params
exit
user_params
exit
user_params
user_params[:commit]
exit
user_params[:commit]
user_params
exit
user_params[:commit]
user_params
user_paramd
c
user_params
c
user_params
c
user_params
c
user_params
c
current_user.current_step = (user_params[:current_step].present?)? user_params[:current_step] : ""
exit
user_params[:current_step]
user_params[:current-step]
exit
user_params
c
 current_user.current_step = (user_params[:current_step].present?)? user_params[:current_step] : ""
user_params[:current_step]
exit
user_params[:current_step]
current_user.current_step = (user_params[:current_step].present?)? user_params[:current_step] : ""
current_user.current_step
c
  current_user.current_step = (user_params[:current_step].present?)? user_params[:current_step] : ""
current_user.current_step
rails c
c
params
c
(params[:type]== 'blocker') && (params[:action]=='new')
params
c
@task= Task.find(params[:task_id])
(params[:type]== 'blocker') && (params[:action]=='new')
params
c
params
c
(params[:type]== 'blocker') ? params[:task_id] : params[:id]
params
(params[:type]
c
self.tasks.where(["list_id=? and completed_at IS NOT ? and DATE(completed_at) =?",list.id,nil, date - 1.day] ).order('completed_at')
date
helpers.is_today?(date)
c
@get_current_date = (session[:current_date].nil?) ? Date.today : session[:current_date].to_date
c
date
Date.today
Date.today == date
date
 DATE(date)
date - 1.day
self.tasks.where(["list_id=? and completed_at IS NOT ? and DATE(completed_at) =?",list.id,nil, date - 1.day] ).order('completed_at')
helpers.is_today?(date)
list
date
c
 @get_current_date = (session[:current_date].nil?) ? Date.today : session[:current_date]
c
@get_current_date = (session[:current_date].nil?) ? Date.today : session[:current_date]
c
--------------------------------------------------------------------------------------------------------------------------------------------------------
c
params
c
params
@list
@user
c
cc
c
current_user?(user)|| current_user.owner?(list)
c
 return true if current_user?(user)|| current_user.owner?(list)
list
user
c
@task.update_attributes!(task_params)
c
cc
c
cc
c
exit
params.require(:task).permit(:detail, :user_id, :assigner_id)
params
c
exit
params[:task].permit(:detail, :user_id, :assigner_id)
params
c
@task= Task.find(id)
params[:id]
params[:task_id]
id = (params[:type]== 'blocker') ? params[:task_id] : params[:id]
exit
@task= Task.find(id)
 id = (params[:type]== 'blocker') ? params[:task_id] : params[:id]
id
Task.find(224)
Tasks.find(24)
T_blockers.all
@task= Task.find(id)
(params[:type]== 'blocker') ? params[:task_id] : params[:id]
params
c
render layout: 'modal'
c
render layout: 'modal'
params
c
params
c
params
c
params
c
params
parms
c
exit
c
cc
c
session[:list_id]
@list.nil?
c
cc
c
(user_id = cookies.signed[:user_id])
(user_id = session[:user_id])
c
@current_user
@current_user ||= User.find_by(id: user_id)
user_id 
(user_id = session[:user_id])
c
@user.save
params
c
 @c_users['label'] =   user.first_name
@c_users['value'] =   user.id
user
c
  @collaboration_users = @list.collaboration_users
exit
s['value']=1
s= {}
s= Array.new()
Array({:a => "a", :b => "b"})
 @c_users
 @c_users['value'] =   user.id
@c_users['value']
 @c_users=[]
@c_users['value']
user
c
@list.collaboration_users
@list
c
List.find(self.list_id).name
List.find(self.list_id)
self.list_id
c
v= helpers.is_today?(date)
v
c
ApplicationController.helpers.is_today?(date)
ApplicationController.helpers.is_today(date)
is_today?
helpers.is_today?(date)
chelpers.is_today?(date)
c
task_params
ctask_params
@user
c
@user
c
task_params
ctask_params
c
exit
task_params
@user
c
exit
@user
task_params
c
User.find((!task_params[:user_id].blank?) ? task_params[:user_id] : current_user.id)
c
