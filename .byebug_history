c
@task
c
@task
c
user_params[:current_step]
c
user_params[:current_step]
params
c
user_params[:current_step]
user_params
exit
user_params
exit
user_params
user_params[:current_step]
params
exit
user_params
user_params[:current_step]
exit
user_params[:current_step]
user_params
exit
user_params
user_params[:current_step]
c
user_params[:current_step]
exit
user_params[:current_step]
exit
user_params
user_params[:current_step]
c
user_params[:current_step]
user_params
params
c
@user
c
redirect_to 'login'
UserMailer.account_activation(@user).deliver_now
@user.save
@user = User.create(user_params)
c
@user.save
 @user = User.create(user_params)
c
UserMailer.account_activation(@user).deliver_now
@user.save
@user = User.create(user_params)
exit
@user.save
  @user = User.create(user_params)
c
user_params
c
@user = User.create(user_params)
@user
c
(user_params[:current_step].present?)? user_params[:current_step] : steps.first
(user_params[current_step].present?)? user_params[:current_step] : steps.first
user_params
params
c
user_params["avatar"]
user_params
user_params[0]
params[0]
params[:avatar]
params[avatar]
c
exit
user_params
user_params.keys[0]
c
user_params
params
user_params.keys[0].to_s
user_params.keys[0].to_S
user_params.keys[0]
user_params.keys["avatar"]
user_params.keys
c
user_params.keys
user_params.key
c
current_user.errors
current_user.update(avatar: user_params)
user_params.keys
current_user.update(user_params.keys[0]: user_params)
user_params.keys[0]
user_params.keys[1]
user_params.keys
current_user.update(user_params.keys: user_params)
current_user.update(user_params.key:user_params)
user_params.keys
params.keys
params.key
user_params.key
current_user.errors
current_user.update(user_params)
params
c
current_user.errors
current_user.update(user_params)
urrent_user.update(user_params)
c
params
PARAMS
exit
params
c
current_user
@user
c
@user
   @user = @current_user
@user
c
params
exit
params
c
params
c
@user
@user = @current_user
c
current_user
@user
current_user = @user
current_user
@current_user
@current_user = @user
c
@current_user
current_user = @user
c
@current_user
c
@user
current_user
@current_user
c
cookies.signed[:user_id]
@current_user
@current_user ||= User.find_by(id: user_id)
@current_user
user_id
user_id = session[:user_id]
User.find_by(id: user_id)
@current_user
user_id
session[:user_id]
if (user_id = session[:user_id])
@user
c
@user
c
params
c
params
c
@list.id
@list
c
@list.all_tasks?
@list
c
@task.deadline?
@task.deadline.nil?
c
@task
c
@task
c
params[:datepicker]
params
exit
params
exit
params
exit
params
exit
c
Task.find(params["task_id"])
params["task_id"]
params[task_id]
(params[task_id])
Task.find(params[task_id])
task.find(params[task_id])
params
params[completed]
params[completed][task.id]
completed
completed[task.id]
params
exit
exexit
exit
exuit
params
exit
params
exit
c
exit
c
cf
c
@tasks
@list
c
@tasks
c
current_user.created_lists.all.order('created_at')
current_user.created_lists.all
current_user.created_lists.task
current_user.created_lists.tasks
current_user.created_lists
@list
@tasks
current_user.tasks
current_user
@tasks
c
 @task = Task.find(params[:id])
c
 $date = (params[:date].present?)? params[:date].to_date : $date
c
d_yesterday
c
cc
c
d_today
c
cc
c
params[:date].blank?
(params[:date].blank?) && (get_date.nil?)
params[:date].present?
$date
c
 @complete_tasks
@incomplete_tasks
c
@tasks
 @complete_tasks
@incomplete_task
c
EXIT
C
c
