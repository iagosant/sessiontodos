c
@list
c
params
c
params
@list
c
get_current_date
params
c
params
c
v
params
c
params
c
params
c
params
c
cc
c
params
c
cc
c
@current_date
params
c
@current_date 
params
c
@current_date 
get_current_date
d_yesterday =  get_current_date - 1.day
params
@list
c
params
c
 @current_date = (params[:date].present?) ? params[:date].to_date : @current_date
(params[:date].blank?) && (@current_date.nil?)
c
params
c
params
c
params
(params[:date].blank?) && (@current_date.nil?)
c
cc
c
params
c
params
c
 @incomplete_tasks = @tasks.where(["completed_at IS ? and DATE(created_at)=?",nil,@current_date])
 @tasks = @user.tasks.where(:list_id=>@list.id)
@list
@user
 d_yesterday =  @current_date - 1.day
c
@current_date = (params[:date].present?) ? params[:date].to_date : @current_date
(params[:date].blank?) && (@current_date.nil?)
params
c
 @current_date = (params[:date].present?) ? params[:date].to_date : @current_date
(params[:date].blank?) && (@current_date.nil?)
params
c
 @current_date
c
 d_yesterday =  @current_date - 1.day
c
@current_date = (params[:date].present?) ? params[:date].to_date : @current_date
(params[:date].blank?) && (@current_date.nil?)
params[:date].blank?
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
params[:date]
c
params[:date].blank?
c
params[:date]
(params[:date].blank?) && (@current_date.nil?)
c
@current_date
c
@current_date =  Date.today
@current_date.nil?
params[:date].blank?
c
 @task= Task.find(id)
id = (params[:type]== 'blocker') ? params[:task_id] : params[:id]
@task
c
exit
c
cc
c
@task
c
@task
c
 @blocker = @task.t_blockers.create(task_params)
params[:type].present?
task_info[:user_id] = current_user.id
 task_info = task_params
current_user.id
task_info[:user_id] = current_user.id
 task_params
c
(params[:type].present? || params[:type]=="blocker")
c
params
c
exit
c
@list
list
 params[:type].present?
task_info[:user_id] = current_user.id
task_info = task_params
params
c
@task
c
cc
c
@blocker = @task.t_blockers.create(task_params)
 params[:type].present?
task_params
c
params
task_params
c
exit
 params[:type].present?
@task
task_params
task_info = task_params
c
@task= Blocker.find(id)
Blocker.all
@blockers = @task.t_blockers
@task= Task.find(id)
id = (params[:type]== 'blocker') ? params[:task_id] : params[:id]
@task= Task.find(id)
params[:id]
params[:task_id]
params[:type]== 'blocker'
(params[:type]== 'blocker') ? params[:task_id] : params[:id]
c
cc
c
@blockers = @task.t_blockers
@task= Task.find(id)
params[:id]
 params[:task_id]
 id = (params[:type]== 'blocker') ? params[:task_id] : params[:id]
c
@task
c
 @blockers
c
@blockers.count
@blockers
c
params[:type]== 'blocker'
c
@blockers = Task.find(105).t_blockers
@blockers = @task.t_blockers
@task = Task.find(params[:task_id])
@task
c
params[:type]== 'blocker'
c
@task = Task.find(params[:task_id])
@task
params[:type].present?
@user
task_info[:user_id] = current_user.id
task_info = task_params
c
@blocker = @task.t_blockers.build
@task = Task.find(params[:task_id])
params
@task
params[:type]== 'blocker'
c
@blockers
 @blocker = @task.t_blockers.build
@blockers = @task.t_blockers
@task = Task.find(params[:task_id])
c
@blockers = @task.t_blockers
  @task = Task.find(params[:task_id])
@task
 params[:type]== 'blocker'
c
@blockers = @task.t_blockers
   15:        @blockers = @task.t_blockers
 @task = Task.find(params[:task_id])
@task
 params[:type]== 'blocker'
c
@blockers
  @blockers
 @blocker = @task.t_blockers.new
@blockers = @task.t_blockers
 @task = Task.find(params[:task_id])
params[:type]== 'blocker'
c
@task
c
cc
c
cc
c
@blocker = @task.t_blockers.new
@blockers = @task.t_blockers
@task = Task.find(params[:task_id])
params[:type]== 'blocker'
c
cc
c
 @incomplete_tasks = @tasks.where(["completed_at IS ? and DATE(created_at)=?",nil,d_today]).count
 @incomplete_tasks = @tasks.where(["completed_at IS ? and DATE(created_at)=?",nil,d_today])
@tasks = @user.tasks.where(:list_id=>@list.id)
c
 @incomplete_tasks = @tasks.where(["completed_at IS ? and DATE(created_at)=?",nil,d_today])
 @tasks = @user.tasks.where(:list_id=>@list.id)
c
@complete_tasks.each do @complete; @complete; end
@complete_tasks.each do @complete
@complete_tasks.each
@complete_tasks.empty?
 @complete_tasks = @tasks.where('DATE(completed_at) BETWEEN ? AND ?', d_yesterday , d_today ).order('completed_at')
@incomplete_tasks = @tasks.where(["completed_at IS ? and DATE(created_at)=?",nil,d_today])
 @tasks = @user.tasks.where(:list_id=>@list.id)
c
