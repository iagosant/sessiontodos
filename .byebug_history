c
date
c
date
c
Task.first.created_at.to_date
Task.first.created_at.to_s
DATE(Task.first.created_at.to_s)
DATE(Task.first.created_at)
Task.first.created_at.date
Task.first.created_at
@task
date
Date.today
date
c
cc
c
date
c
Date.today
date
c
cc
c
cc
c
date
c
get_current_date
@current_date
date
c
cc
c
exit
get_current_date
@current_date
date
c
 @current_date 
c
@current_date = (params[:date].present?) ? params[:date].to_date : @current_date
(params[:date].blank?) && (@current_date.nil?)
c
(get_current_date == Date.today)
c(get_current_date == Date.today)
c
cc
c
                    c
c
@current_date 
c
@current_date 
c
@current_date 
c
@current_date 
c
(params[:date].present?) ? params[:date].to_date : @current_date
(params[:date].present?)
(params[:date].blank?) && (@current_date.nil?)
c
(get_current_date == Date.today)
c
(get_current_date == Date.today)
c
get_current_date
Date.today
cDate.today
(get_current_date == Date.today)
c
(get_current_date == Date.today)
c
  (get_current_date == Date.today)
c
   (get_current_date == Date.today)
c   (get_current_date == Date.today)
c
 (get_current_date == Date.today)
c
 (get_current_date == Date.today)
c
(get_current_date == Date.today)
 if (get_current_date == Date.today)
c
(get_current_date == Date.today)
 return true if (get_current_date == Date.today)
c
@user
c
exit
@user
c
task_params[:user_id]
task_params
params
params[:user_id].blank?
User.find((!params[:user_id].blank?) ? params[:user_id] : current_user.id)
params
c
 @task = @list.tasks.create(task_params)
params[:type]
task_info = task_params
task_params
c
params
c
 task_info = task_params
c
params
exit
params
exit
params
exit
params
task_info = task_params
c
exit
task_info = task_params
c
params
c
params
exit
params
c
@user.id
c
User.all
User.where(first_name="picglobal")
User.first
User.where(firtsname="picglobal")
User.where(name="picglobal")
User.find_by(name="picglobal")
User.find_by(:name="picglobal")
params
c
 @user = User.find((!params[:task_user].blank?) ? params[:task_user] : current_user.id)
@user
params
exit
params
exit
 @user = User.find((!params[:task_user].blank?) ? params[:task_user] : Task.find(params[:task_id]).user_id)
params
c
params
c
@user = User.find((!params[:task_user].blank?) ? params[:task_user] : Task.find(params[:task_id]).user_id)
params
c
 @user = User.find((!params[:task_user].blank?) ? params[:task_user] : Task.find(params[:task_id]).user_id)
@task
@user = User.find((!params[:task_user].blank?) ? params[:task_user] : @task.user_id)
params
c
Task.find(162)
Task.all
Task.find(1)
Task.find(task_id)1
Task.find(task_id)
params
c
@user= User.find(10)
@user= User.find()10
@user
c
(!params[:task_user].blank?) ? params[:task_user] : current_user.id
c
current_user.id
task_info[:user_id] = (!params[:task_user].blank?) ? params[:task_user] : current_user.id
task_info = task_params
params
c
 task_info[:user_id] = (!params[:task_user].blank?) ? params[:task_user] : current_user.id
 task_info = task_params
 task_info[:user_id] = (!params[:task_user].blank?) ? params[:task_user] : current_user.id
params
exit
params
exit
params
c
@user = User.find(params[:id])
(!params[:type].blank?) && (params[:type]== 'collaborator')
(params[:user_id].blank?) && (params[:type].blank?)
params[:user_id].blank?) && (params[:type].blank?)
params
c
params
c
params
c
  @incomplete_tasks_past= (Date.today == d_today)? incomplete_tasks - @incomplete_tasks : nil
c  @incomplete_tasks_past= (Date.today == d_today)? incomplete_tasks - @incomplete_tasks : nil
c
@incomplete_tasks_past= (Date.today == d_today)? incomplete_tasks - @incomplete_tasks : nil
Date.today
d_today
 @incomplete_tasks_past= (Date.today.to_s == d_today)? incomplete_tasks - @incomplete_tasks : nil
c
self
c
 self.tasks.where(["user_id=? and completed_at IS NOT ?",user.id,nil])
self
c
incompleted_tasks(@user)
@list.incompleted_tasks(@user)
c
 self.tasks
user
c
cc
c
 self.incompleted_tasks(user).count
c
self.tasks.where(["user_id=? and completed_at IS ?",user.id,nil]).order("updated_at DESC").count
self.tasks.where(["user_id=? and completed_at IS ?",user.id,nil]).order("updated_at DESC")
c
  self.tasks.where(["user_id=? and completed_at IS ?",user.id,nil]).order("updated_at DESC")
c
 self.tasks.where(["user_id=? and completed_at IS NOT ?",user.id,nil])
c
user
 self.tasks.where(["user_id=? and completed_at IS ?",user.id,nil]).order("updated_at DESC")
c
self.tasks.where(completed_at:nil).order("updated_at DESC")
self.tasks.where(["completed_at=?",'nil']).order("updated_at DESC")
self.tasks.where(["user_id=? and completed_at=?",user.id,'nil']).order("updated_at DESC")
self.tasks.where(["user_id=? and completed_at=?",user.id,nil]).order("updated_at DESC")
self.tasks.where(["user_id=?",user.id]).order("updated_at DESC")
self.tasks.where(["user_id=?",user.id]).order("updated_at DESC)
self.tasks.where(["user_id=?",user.id]).order("updated_at DESC
self.tasks.where(["user_id=? and completed_at=?",user.id,nil]).order("updated_at DESC")
user
@user
c
params
@list
@task
c
C
c
@list.tasks.where([':completed_at=? and user_id=?',nil,9])
@list.tasks.where(['completed_at=? and user_id=?',nil,9])
@list.tasks.where(:completed_at=>nil)
@list.tasks
@list.tasks.where(['completed_at=?',nil]).order("updated_at DESC")
@list.tasks.where(['completed_at=? and user_id=?',nil, 9]).order("updated_at DESC")
@list.Taskswhere(['completed_at=? and user_id=?',nil, 9]).order("updated_at DESC")
@list.incompleted_tasks
@list.incompleted_tasks(@user)
 @incomplete_tasks = @list.incompleted_tasks(@user).where("DATE(created_at) = ?",d_today)
