c
exit
c
cc
c
exit
c
!@list.collaboration_users.empty?
c
current_user
c
@list
c
current_user
@list.owner
@list.collaboration_users
@list
c
@list.collaboration_users
current_user
@list.owner
@list
c
cc
c
exit
c
@list.collaboration_users
@list
c
current_user.collaboration_lists
current_user.collaborations_lists
current_user.collaborations_list
current_user
@list.owner
@list.collaboration_users
c
 @list_users = @list.collaboration_users.where.not(:id=> current_user.id)
c
exit
c
current_user
c
List.find(3)
List.find(3).delete
List.find(3).created_by
List.find(3).owner
List.find(3)
 @collaboration_lists.first
 @collaboration_lists.first.owner
 @collaboration_lists.second.owner
 @collaboration_lists.first.owner
 @collaboration_lists.first
 @collaboration_lists = current_user.collaboration_lists.all
current_user.collaboration_lists.all
current_user.collaboration_lists
current_user
@lists
c
@list
c
exit
c
@list_users
c@list_users
c
cc
c
@list.collaboration_users
@list.collaboration_users.delete(l)
l=@list.collaboration_users
@list.collaboration_users
@list.collaboration_users.delete(User.find(7))
@list.collaboration_users.find(2).delete
@list.collaboration_users.find(2)
@list.collaboration_users
@list
@list_users
c
 @list_users = @list.collaboration_users
c
 @list_users = @list.collaboration_users
c
@list_users = @list.collaboration_users
c
exit
@list_users << @list.collaboration_users
 @list_users=[]
 @list_users << @list.collaboration_users
!owner?
c
cc
c
params
c
params
list_params
c
(!@token.nil?)&&(user.email==@invitation.recipient_email)
@token= params[:invitation_token]
!@token.nil?
(!@token.nil?)&&(user.email==@invitation.recipient_email)
  @invitation = Invitation.find_by_token(params[:invitation_token])
params
@token
@invitation = Invitation.find_by_token(@token)
user && user.authenticate(params[:session][:password]) && user.activated
user = User.find_by_email(params[:session][:email].downcase)
c
@url = url
c@url = url
c
List.last.collaboration_users
User.last.collaboration_lists
User.find(1).collaboration_lists
Colaboration.all
@user.collaboration_lists.push(list) 
list =  Invitation.find_by_token(@token).list_id 
@token != nil
c
@token
params
exit
@token
params
exit
params
params[:invitation_token]
params
c
cc
c
List
subject    'Invitation'
signup_url
invitation
c
  InvitationMailer.send_invitation(@invitation, new_user_path(:invitation_token => @invitation.token)).deliver
  InviteMailer.send_invitation(@invitation, new_user_path(:invitation_token => @invitation.token)).deliver
@invitation
@invitation.save
  @invitation.sender = current_user
 @invitation.sender = current_user
 @invitation = Invitation.new(invitation_params)
invitation_params
c
params
c
params
@list
exit
params[:list_id]
params
exit
@list
params
exit
signup_url(@invitation.token)
@invitation.token
Mailer.deliver_invitation(@invitation, signup_url(@invitation.token))
@invitation
@invitation.save
logged_in?
c
@invitation = @list.invitations.build(invitation_params)
@invitation = @list.invitations.built(invitation_params)
 @list = List.find(params[:list_id])
 exit
Invitation.find(3).recipient_email
Invitation.find(3)
@invitation.recipient_email
@invitation = Invitation.create(invitation_params)
@invitation = Invitation.new(invitation_params)
@invitation = Invitations.new(invitation_params)
@invitation = @list.invitations.new(invitation_params)
@list
 @invitation = @list.invitations.build(invitation_params)
 @invitation = @list.invitations.built(invitation_params)
  @list = List.find(params[:list_id])
exit
Invitation.find(2)
Invitation.find(2).update(:recipient_email=>'misley.rodriguez@yahoo.com')
Invitation.find(2)
@invitation= Invitation.find(2)
@invitation
Invitation.find(2).update(:recipient_email=>@invitation.recipient_email)
Invitation.find(2)
Invitation.all
@invitation.recipient_email
@invitation
@invitation.save
@invitation
@invitation.recipient_email
@invitation
@INVITATIONS
c
invitation_params
@list.invitations.build(invitation_params)
@invitation = @list.invitations.new(invitation_params)
@list = List.find(params[:list_id])
exit
@invitation
params[:invitation]
Invitation.new(params[:invitation])
Invitation.new(invitation_params)
invitation_params
 params
@invitation
@invitation.list = @list
@list= List.find(19)
@list
params
exit
params
@list
@invitation
c
User.create
User.all
user_params
@user = User.create(user_params)
@user
@user = User.create(user_params)
@user.save
 @user = User.create(user_params)
exit
 @user.save
@user.errors
 @user.save
  @user = User.create(user_params)
exit
@user.errors
@user.save
  @user = User.create(user_params)
exit
User.last.delete
@user.current_step
@user.errors
 @user.save
 @user = User.create(user_params)
current_step
@user
current_user
params
c
user_params[:current_step]
params[:current_step]
 current_user.current_step
params
c
current_user.current_step
current_user
c
current_user.current_step= params[:user][:current_step]
current_user.current_step
current_step
