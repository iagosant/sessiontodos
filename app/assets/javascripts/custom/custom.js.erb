jQuery.fn.submitOnCheck = function() {
  this.find('input[type=submit]').remove();
  this.find('input[type=checkbox]').click(function() {
    $(this).parent('form').submit();
  });
  return this;
};

$(document).on('turbolinks:load',function(){
$(document).on("click", 'ul.tabs li a',function(e){
  console.log($(this).data("current-step"));
  // e.preventDefault;
  // $("input:hidden[id=user_current_step]").val($(this).data("current-step"));
})
/* Modal for view*/
var modal_holder_selector;
 modal_holder_selector = "#modal-holder";
 $(document).on("click", "[data-behavior='modal']", function() {
   var location;
   location = $(this).attr("href");
   $.get(location, function(data) {
     $(modal_holder_selector).html(data);
      $('.modal').modal();
     return $("#ms-modal-dialog").modal("open");
   });
   return false;
 });
 return $(document).on("ajax:success", "[data-behavior='modal-form']", function(event, data, status, xhr) {
   var url;
   url = xhr.getResponseHeader("Location");
   if (url) {
     window.location = url;
   } else {
     $("#ms-modal-dialog").modal("close");
   }
   return false;
 });
/* end modal*/
$(".sidebar-collapse").sideNav();

// $('.leftside-navigation').perfectScrollbar();

// $('#detail').triggeredAutocomplete({
//     hidden: '#hidden_inputbox',
//     source: "/lists/28/complete_users",
//     trigger: "@"
// });
/* MODAL */
 $('#ms-modal-applications').modal({
     dismissible: false, // Modal can be dismissed by clicking outside of the modal
     opacity: .5, // Opacity of modal background
     inDuration: 300, // Transition in duration
     outDuration: 200, // Transition out duration
     startingTop: '4%', // Starting top style attribute
     endingTop: '150px', // Ending top style attribute
     ready: function(modal, trigger) { // Callback for Modal open. Modal and trigger parameters available.
       console.log(modal, trigger);
     },
     complete: function() { alert('Closed'); } // Callback for Modal close
   });
  $('select').material_select();
  $('.modal-trigger').modal();

  var pgurl = window.location.href.substr(window.location.href.lastIndexOf("/")+1);
  $("#stand-up ul li a").each(function(){
         if($(this).attr("href") == pgurl || $(this).attr("href") == '' )
         $(this).addClass("active");
    });


  // $("#stand-up ul.menu li a").click(function(){
  //    var link = $(this);
  //    $('#stand-up ul.menu li a').removeClass('active');
  //    $(this).addClass('active');
  // });
  // $('#multiple_select').material_select({
  //           onDropdownHidden: function(event) {
  //               // alert('Dropdown closed.');
  //           }
  // //       });
  // $('#multiple_select').on( "change",function(){
  //
  //   // if ($(this).siblings( "input.select-dropdown" ).length==0){
  //       //  alert($(this).siblings( "input.select-dropdown"  ).attr('class'));
  //   // }
  // //  alert('entrooo');
  //
  //   })

  $("#stand-up ul.menu li a").hover(function(){
      change_img_nav(this);
    }, function(){
      change_img_nav(this)
   });

   // Initialize collapse button
  $(".button-collapse").sideNav();
});
function change_img_nav(e){
  var img = $(e).find("img#icon-change"),
      img_path;
      img_path = img.attr('src');

  if ((img.length) && (img_path.lastIndexOf("lightblue")==-1)){
    img_path = img_path.substr(0,img_path.lastIndexOf("."))+'-lightblue.png';
    $(e).css('color','#92daee');
    img.attr('src',img_path);
  } else if (img.length){
      img_path = img_path.substr(0,img_path.lastIndexOf("-lightblue"))+'.png';
      img.attr('src',img_path);
      $(e).css('color','#fff');
    }
}
'use strict';

(function(d){
    var mL = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
    var mS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];

    d.prototype.getLongMonth = d.getLongMonth = function getLongMonth (inMonth) {
        return gM.call(this, inMonth, mL);
    }

    d.prototype.getShortMonth = d.getShortMonth = function getShortMonth (inMonth) {
        return gM.call(this, inMonth, mS);
    }

    function gM(inMonth, arr){
        var m;

        if(this instanceof d){
            m = this.getMonth();
        }
        else if(typeof inMonth !== 'undefined') {
            m = parseInt(inMonth,10) - 1; // Subtract 1 to start January at zero
        }

        return arr[m];
    }
})(Date);
